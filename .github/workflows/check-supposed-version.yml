name: Supposed version check

on:
  pull_request:
    types:
      - labeled
      - unlabeled
      - opened

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'
  enforce-label:
    name: Supposed version not exist
    needs: pre_job
    runs-on: ubuntu-latest
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          all_but_latest: true
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check major label
        id: check_pr_labels_major
        uses: Dreamcodeio/pr-has-label-action@master
        with:
          label: 'major'
      - name: Check minor label
        id: check_pr_labels_minor
        uses: Dreamcodeio/pr-has-label-action@master
        with:
          label: 'minor'
      - name: Check patch label
        id: check_pr_labels_patch
        uses: Dreamcodeio/pr-has-label-action@master
        with:
          label: 'patch'

      - name: Set found label
        run: |
          if [[ "${{ steps.check_pr_labels_major.outputs.hasLabel }}" ]]; then
            echo "CORRECT_LABEL=$(echo "major")" >> $GITHUB_ENV
          elif [[ "${{ steps.check_pr_labels_minor.outputs.hasLabel }}" ]]; then
            echo "CORRECT_LABEL=$(echo "minor")" >> $GITHUB_ENV
          elif [[ "${{ steps.check_pr_labels_patch.outputs.hasLabel }}" ]]; then
            echo "CORRECT_LABEL=$(echo "patch")" >> $GITHUB_ENV
          else
            echo "You need to specify correct label for your PR (major, minor or patch)"
            exit 1
          fi

      - name: Get supposed release version
        id: release_version
        run: |
          echo "::set-output name=release::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      - name: Calculate new version
        uses: actions-ecosystem/action-bump-semver@v1
        id: bump_semver
        with:
          current_version: ${{ steps.release_version.outputs.release }}
          level: ${{ env.CORRECT_LABEL }}

      - uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with:
          tag: ${{ steps.bump_semver.outputs.new_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cancel Previous Runs
        if: steps.checkTag.outputs.exists != 'ture'
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          workflow_id: ${{ github.event.workflow.id }}
          access_token: ${{ github.token }}

      - uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `*Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, New supposed version: \`${{ steps.bump_semver.outputs.new_version }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })