name: Build development version

on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
    paths:
      - '**'
      - '!chart/**'
      - '!pom.xml'
      - '!README.md'

jobs:
  compile:
    runs-on: ubuntu-20.04
    outputs:
      new_version: ${{ steps.version_step.outputs.nv }}
    strategy:
      matrix:
        java: [ 8 ]
    name: Java ${{ matrix.java }} compile
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get current release version
        id: release_version
        run: |
          echo "::set-output name=release::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
      - name: Set default version if release is not found
        id: version_step
        run: |
          SHA=$(git rev-parse --short ${{ github.event.pull_request.head.sha || github.sha }})
          if [[ "${{ steps.release_version.outputs.release }}" = "" ]]; then
            echo "NEW_VERSION=$(echo "0.0.1-$SHA")" >> $GITHUB_ENV
            echo "::set-output name=nv::0.0.1-$SHA"
          else
            echo "NEW_VERSION=$(echo "${{ steps.release_version.outputs.release }}-$SHA")" >> $GITHUB_ENV
            echo "::set-output name=nv::${{ steps.release_version.outputs.release }}-$SHA"
          fi
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-package: jdk
          java-version: ${{ matrix.java }}
      - name: Compile the Project
        run: mvn -B compile -DnewVersion=${{ env.NEW_VERSION }}
  build:
    runs-on: ubuntu-20.04
    needs: compile
    name: Build the Maven Project
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: behoof4mind
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
          java-package: jdk
      - name: Build and test project
        run: mvn -B deploy -DnewVersion=${{ needs.compile.outputs.new_version }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.compile.outputs.new_version }}
          prerelease: true
          files: |
            target/*.jar
      - uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `Pusher: @${{ github.actor }}
            Action: \`${{ github.event_name }}\`
            Released version after merge: \`${{ needs.compile.outputs.new_version }}\`
            Current version: \`${{ needs.compile.outputs.new_version }}\`
            Docker image: \`docker.io/ubirch-test-web-server:${{ needs.compile.outputs.new_version }}\`
            Your application link: https://ci.dev.ubirch.com/applications/${{ github.event.repository.name }}`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })